version: "0.0"
name: "media-server"
services:
  ### GLUETUN WINDSCRIBE WIREGUARD
  vpn:
    image: wiorca/docker-windscribe
    container_name: docker-windscribe
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - WINDSCRIBE_USERNAME=${WINDSCRIBE_USERNAME}
      - WINDSCRIBE_PASSWORD=${WINDSCRIBE_PASSWORD}
      - WINDSCRIBE_PROTOCOL=stealth
      - WINDSCRIBE_PORT=80
      - WINDSCRIBE_LOCATION=US
      - WINDSCRIBE_LANBYPASS=on
      - WINDSCRIBE_FIREWALL=on
      - VPN_PORT=9898
    volumes:
      - /opt/docker/docker-windscribe
    dns:
      - 8.8.8.8
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  ### Container management Web UI
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - ${PORTAINER_HOST_PORT}:9000 # webui for portainer (http)
      - ${PORTAINER_HOST_PORT_SSL}:9443 # webui for portainer (https)
    volumes:
      - ./.containers/Portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.containers/ssl:/ssl
    restart: unless-stopped

    ############ Media Consumption ############

  ## NOTE - DON'T RUN EMBY AND JELLYFIN AT THE SAME TIME! THEY WILL HAVE PORT CONFLICTS!
  emby:
    image: lscr.io/linuxserver/emby:latest
    container_name: emby
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      # - NVIDIA_VISIBLE_DEVICES=all
      # - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      - ./.containers/Emby:/config # Configuration directory
      - ${LOCAL_TV_PATH}:/media/TV # Media directory
      - ${LOCAL_MOVIES_PATH}:/media/movies # Media directory
      - ${LOCAL_ANIME_PATH}:/media/anime # Media directory
      - ./.containers/ssl:/ssl # Add SSL Certs to this directory
    ports:
      - ${EMBY_HOST_PORT}:8096 #http port
      - ${EMBY_HOST_PORT_SSL}:8920 #ssl port
    # runtime: nvidia # Expose NVIDIA GPUs if any (Apple Silicon does not use this)
    # network_mode: host # Enable DLNA and Wake-on-Lan
    # devices:
    #  - /dev/dri:/dev/dri # VAAPI/NVDEC/NVENC render nodes
    #   - /dev/vchiq:/dev/vchiq # MMAL/OMX on Raspberry Pi
    #   - /dev/video10:/dev/video10 #optional other video cards
    #   - /dev/video11:/dev/video11 #optional
    #   - /dev/video12:/dev/video12 #optional
    restart: unless-stopped
    profiles:
      - emby

  ## NOTE - DON'T RUN EMBY AND JELLYFIN AT THE SAME TIME! THEY WILL HAVE PORT CONFLICTS!
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - ./.containers/Jellyfin:/config
      - ${LOCAL_TV_PATH}:/media/TV # Media directory
      - ${LOCAL_MOVIES_PATH}:/media/movies # Media directory
      - ${LOCAL_ANIME_PATH}:/media/anime # Media directory
      - ./.containers/Emby/ssl:/ssl # Add SSL Certs to this directory
    ports:
      - ${JELLYFIN_HOST_PORT}:8096
      - ${JELLYFIN_HOST_PORT_SSL}:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
    profiles:
      - jellyfin

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - VERSION=${PLEX_VERSION}
      - PLEX_CLAIM=${PLEX_CLAIM} #optional
    ports:
      - ${PLEX_HOST_PORT}:32400
    volumes:
      - ./.containers/Plex:/config
      - ${LOCAL_TV_PATH}:/tv
      - ${LOCAL_MOVIES_PATH}:/movies
    restart: unless-stopped
    profiles:
      - plex

  komga: ###### NEED TO CONFIGURE LIKE UBUNTU SERVER so no data is lost
    image: gotson/komga:latest
    container_name: komga
    volumes:
      - ./.containers/Komga/config:/config
      - /Volumes/Books:/data
    ports:
      - ${KOMGA_HOST_PORT}:25600
    user: "${UID}:${GID}"
    # remove the whole environment section if you don't need it
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - KOMGA_LIBRARIES_SCAN_STARTUP=${KOMGA_LIBRARIES_SCAN_STARTUP}
      - KOMGA_REMEMBERME_KEY=${KOMGA_REMEMBERME_KEY}
      - JAVA_OPTS=${KOMGA_JAVA_OPTS}
    restart: unless-stopped
    networks:
      - default

  ### For managing server content requests
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=${JELLYSEER_LOG_LEVEL}
      - TZ=${TIMEZONE}
      - JELLYFIN_TYPE=${JELLYSEER_TYPE} # if using emby
    ports:
      - ${JELLYSEERR_HOST_PORT}:5055
    volumes:
      - ./.containers/Jellyseerr:/app/config
    restart: unless-stopped

############ Media PVR Management ############
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./.containers/Sonarr:/config
      - ${LOCAL_TV_PATH}:/tv # optional but needed to map external data
      - ${LOCAL_DOWNLOADS_PATH}:/downloads # optional but needed to map external data
    ports:
      - ${SONARR_HOST_PORT}:8989
      - ${SONARR_HOST_PORT_SSL}:9898 # ssl port if you enable it
    restart: unless-stopped
    depends_on:
      - prowlarr
    networks:
      - default

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./.containers/Radarr:/config
      - ${LOCAL_MOVIES_PATH}:/movies # optional but needed to map external data
      - ${LOCAL_DOWNLOADS_PATH}:/downloads # optional but needed to map external data
    ports:
      - ${RADARR_HOST_PORT}:7878
    restart: unless-stopped
    depends_on:
      - prowlarr
    networks:
      - default

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
    volumes:
      - ./.containers/Prowlarr:/config
    ports:
      - ${PROWLARR_HOST_PORT}:9696
    restart: unless-stopped
    networks:
      - default

  jackett: # This is an option if Prowlarr doesn't work correctly
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - AUTO_UPDATE=${JACKETT_AUTO_UPDATE} #optional
      - RUN_OPTS=${JACKETT_RUN_OPTS} #optional
    volumes:
      - ./.containers/Jackett:/config
      - ${LOCAL_DOWNLOADS_PATH}:/downloads
    ports:
      - ${JACKETT_HOST_PORT}:9117
    restart: unless-stopped
    profiles:
      - jackett

  ############ NEEDS VPN BEFORE USE (WINDSCRIBE or WIREGUARD) ############

  # qbittorrent:
  #   image: lscr.io/linuxserver/qbittorrent:latest
  #   container_name: qbittorrent
  #   environment:
  #     - PUID=${UID}
  #     - PGID=${GID}
  #     - TZ=${TIMEZONE}
  #     - WEBUI_PORT=8080
  #   volumes:
  #     - ./.containers/Transmission:/config
  #     - ${LOCAL_DOWNLOADS_PATH}:/downloads
  #   ports:
  #     - 8080:8080
  #     - 6881:6881
  #     - 6881:6881/udp
  #   restart: unless-stopped
  # WE WILL TRY THIS LATER

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    network_mode: service:vpn
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      # - TRANSMISSION_WEB_HOME= #optional -- set if you have a custom transmission ui
      - USER=${TRANSMISSION_USER} #optional
      - PASS=${TRANSMISSION_PASS} #optional
      - WHITELIST=${TRANSMISSION_WHITELIST} #optional
      - PEERPORT=${TRANSMISSION_PEERPORT} #optional
      - HOST_WHITELIST=${TRANSMISSION_HOST_WHITELIST} #optional
    volumes:
      - ./.containers/Transmission:/config
      - ${LOCAL_DOWNLOADS_PATH}:/downloads
    # ports: ### Ports are not allowed when network_mode: is service:vpn
    #   - 9091:9091 # webui
    #   - 51413:51413 # for seed discovery - greatly improves performance even if not seeding
    #   - 51413:51413/udp
    restart: unless-stopped
    depends_on:
      - vpn
      - prowlarr
      - sonarr
      - radarr

  ############# Backups/Restore ############

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    network_mode: service:vpn
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TIMEZONE}
      - CLI_ARGS=${DUPLICATI_CLI_ARGS} #optional
    volumes:
      - ./.containers/Duplicati:/config
      - ./.containers/Duplicati/backups:/backups
      - ./.containers:/source ## Access to the directory where the container AppData is located
    # ports:
    #   - ${DUPLICATI_HOST_PORT}:8200
    restart: unless-stopped
    depends_on:
      - vpn

############# NETWORK DRIVES or NAMED VOLUMES #############
volumes:
  Movies:
    driver_opts:
      type: cifs
      o: iocharset=utf8,username=${SMB_USER},password=${SMB_PASS},uid=${SMB_UID},gid=${SMB_GID},vers=3.0
      device: ${MOVIE_NETWORK_SHARE}
  Television:
    driver_opts:
      type: cifs
      o: iocharset=utf8,username=${SMB_USER},password=${SMB_PASS},uid=${SMB_UID},gid=${SMB_GID},vers=3.0
      device: ${TV_NETWORK_SHARE}
networks:
  default:
    driver: bridge
    name: media-server
